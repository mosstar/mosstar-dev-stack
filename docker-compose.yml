name: mosstar-dev-stack

services:
  traefik:
    image: traefik:v2.11.8
    restart: always
    environment:
      TZ: "Europe/Istanbul"
    command:
      - "--configFile=/etc/traefik/traefik.yml"
    ports:
      - "${HTTP_PORT}:80" # HTTP
      - "${POSTGRES_PORT}:5432" # Postgres
      - "${REDIS_PORT}:6379" # Redis
      - "${RABBITMQ_PORT}:5672" # RabbitMQ
      - "${MONGODB_PORT}:27017" # MongoDB
      - "${SMTP_PORT}:1025" # SMTP (Mailpit)
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.local`)
      - traefik.http.routers.traefik.service=api@internal
    volumes:
      - ./volumes/traefik/traefik-config.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro

  portainer:
    image: portainer/portainer-ce:2.21.2
    restart: always
    command: -H unix:///var/run/docker.sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.rule=Host(`portainer.local`)
      - traefik.http.routers.portainer.entrypoints=http
      - traefik.http.services.portainer.loadbalancer.server.port=9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer-data:/data

  postgres:
    build:
      context: ./images/postgres
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_USER: ${DEFAULT_USERNAME}
      POSTGRES_PASSWORD: ${DEFAULT_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.postgres.rule=HostSNI(`*`)
      - traefik.tcp.routers.postgres.entrypoints=postgres
      - traefik.tcp.services.postgres.loadbalancer.server.port=5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:8.12
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${DEFAULT_USER_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${DEFAULT_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.local`)
      - traefik.http.routers.pgadmin.entrypoints=http
      - traefik.http.services.pgadmin.loadbalancer.server.port=80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./volumes/pgadmin/servers.json:/pgadmin4/servers.json

  redis:
    image: redis:7.4.0-alpine
    restart: always
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.redis.rule=HostSNI(`*`)
      - traefik.tcp.routers.redis.entrypoints=redis
      - traefik.tcp.services.redis.loadbalancer.server.port=6379
    volumes:
      - redis-data:/data

  geoserver:
    image: kartoza/geoserver:2.25.2
    restart: always
    environment:
      GEOSERVER_ADMIN_USER: ${DEFAULT_USERNAME}
      GEOSERVER_ADMIN_PASSWORD: ${DEFAULT_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.http.routers.geoserver.rule=Host(`geoserver.local`)
      - traefik.http.routers.geoserver.entrypoints=http
      - traefik.http.services.geoserver.loadbalancer.server.port=8080
    volumes:
      - geoserver-data:/opt/geoserver/data_dir

  minio:
    image: minio/minio:RELEASE.2024-08-17T01-24-54Z
    restart: always
    environment:
      MINIO_ROOT_USER: ${DEFAULT_USERNAME}
      MINIO_ROOT_PASSWORD: ${DEFAULT_PASSWORD}
      MINIO_BROWSER_REDIRECT_URL: http://minio-console.local
    command: server /data --console-address ":9001"
    labels:
      - traefik.enable=true

      - traefik.http.routers.minio.rule=Host(`minio.local`)
      - traefik.http.routers.minio.entrypoints=http
      - traefik.http.routers.minio.service=minio
      - traefik.http.services.minio.loadbalancer.server.port=9000

      - traefik.http.routers.minio-console.rule=Host(`minio-console.local`)
      - traefik.http.routers.minio-console.entrypoints=http
      - traefik.http.routers.minio-console.service=minio-console
      - traefik.http.services.minio-console.loadbalancer.server.port=9001
    volumes:
      - minio-data:/data

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.2
    restart: always
    depends_on:
      - postgres
    command: "start-dev"
    environment:
      # DB Configuration
      KC_DB: postgres
      KC_DB_URL: "jdbc:postgresql://postgres:5432/keycloak"
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      # Server Configuration
      KC_HOSTNAME: http://keycloak.local
      KEYCLOAK_ADMIN: ${DEFAULT_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${DEFAULT_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.http.routers.keycloak.rule=Host(`keycloak.local`)
      - traefik.http.routers.keycloak.entrypoints=http
      - traefik.http.services.keycloak.loadbalancer.server.port=8080
    volumes:
      - keycloak-data:/opt/keycloak
      - ./volumes/keycloak/idm-theme/:/opt/keycloak/themes/idmapp/
      - ./volumes/keycloak/uab-theme/:/opt/keycloak/themes/uab/

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - xpack.security.audit.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${DEFAULT_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.http.routers.elasticsearch.rule=Host(`elasticsearch.local`)
      - traefik.http.routers.elasticsearch.entrypoints=http
      - traefik.http.services.elasticsearch.loadbalancer.server.port=9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    restart: always
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${DEFAULT_PASSWORD}
      SERVER_PUBLICBASEURL: http://kibana.local
    labels:
      - traefik.enable=true
      - traefik.http.routers.kibana.rule=Host(`kibana.local`)
      - traefik.http.routers.kibana.entrypoints=http
      - traefik.http.services.kibana.loadbalancer.server.port=5601

  apm-server:
    image: docker.elastic.co/apm/apm-server:${ELASTIC_VERSION}
    restart: always
    depends_on:
      - elasticsearch
      - kibana
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
        -E output.elasticsearch.username=elastic
        -E output.elasticsearch.password=$DEFAULT_PASSWORD
        -E apm-server.auth.secret_token=$ELASTIC_APM_SECRET_TOKEN
    labels:
      - traefik.enable=true
      - traefik.http.routers.apm-server.rule=Host(`apm.local`)
      - traefik.http.routers.apm-server.entrypoints=http
      - traefik.http.services.apm-server.loadbalancer.server.port=8200

  rabbitmq:
    image: rabbitmq:3.13.7-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${DEFAULT_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${DEFAULT_PASSWORD}
    labels:
      - traefik.enable=true

      - traefik.tcp.routers.rabbitmq.rule=HostSNI(`*`)
      - traefik.tcp.routers.rabbitmq.entrypoints=rabbitmq
      - traefik.tcp.routers.rabbitmq.service=rabbitmq
      - traefik.tcp.services.rabbitmq.loadbalancer.server.port=5672

      - traefik.http.routers.rabbitmq-console.rule=Host(`rabbitmq.local`)
      - traefik.http.routers.rabbitmq-console.entrypoints=http
      - traefik.http.routers.rabbitmq-console.service=rabbitmq-console
      - traefik.http.services.rabbitmq-console.loadbalancer.server.port=15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  mongo:
    image: mongo:7.0.14
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DEFAULT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DEFAULT_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.mongodb.rule=HostSNI(`*`)
      - traefik.tcp.routers.mongodb.entrypoints=mongodb
      - traefik.tcp.services.mongodb.loadbalancer.server.port=27017
    volumes:
      - mongo-data:/data/db

  grafana:
    image: grafana/grafana:11.2.0
    restart: always
    environment:
      GF_SECURITY_ADMIN_USER: ${DEFAULT_USERNAME}
      GF_SECURITY_ADMIN_PASSWORD: ${DEFAULT_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.local`)
      - traefik.http.routers.grafana.entrypoints=http
      - traefik.http.services.grafana.loadbalancer.server.port=3000
    volumes:
      - grafana-data:/var/lib/grafana

  mailpit:
    image: axllent/mailpit:v1.20.4
    restart: always
    environment:
      TZ: "Europe/Istanbul"
      MP_DATABASE: "/data/database.db"
      MP_SMTP_AUTH: "${DEFAULT_USERNAME}:${DEFAULT_PASSWORD}"
      MP_SMTP_AUTH_ALLOW_INSECURE: "true"
    labels:
      - traefik.enable=true

      - traefik.tcp.routers.mailpit.rule=HostSNI(`*`)
      - traefik.tcp.routers.mailpit.entrypoints=mailpit
      - traefik.tcp.routers.mailpit.service=mailpit
      - traefik.tcp.services.mailpit.loadbalancer.server.port=1025

      - traefik.http.routers.mailpit-ui.rule=Host(`mailpit.local`)
      - traefik.http.routers.mailpit-ui.entrypoints=http
      - traefik.http.routers.mailpit-ui.service=mailpit-ui
      - traefik.http.services.mailpit-ui.loadbalancer.server.port=8025
    volumes:
      - mailpit-data:/data

volumes:
  portainer-data:
  postgres-data:
  pgadmin-data:
  redis-data:
  geoserver-data:
  minio-data:
  keycloak-data:
  elasticsearch-data:
  rabbitmq-data:
  mongo-data:
  grafana-data:
  mailpit-data:
